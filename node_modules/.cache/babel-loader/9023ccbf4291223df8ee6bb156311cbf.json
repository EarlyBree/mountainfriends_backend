{"ast":null,"code":"import _regeneratorRuntime from\"C:/mountain_friends_web/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/mountain_friends_web/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/mountain_friends_web/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import Card from\"../UI/Card/Card\";import HikeDetails from\"./HikeDetails\";import TourFilter from\"./ChartBar/TourFilter\";import TourChart from\"./ChartBar/TourChart\";import classes from\"./MyMountains.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MyMountains=function MyMountains(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),myHikes=_useState2[0],setMyHikes=_useState2[1];var _useState3=useState(\"2022\"),_useState4=_slicedToArray(_useState3,2),filteredYear=_useState4[0],setFilteredYear=_useState4[1];useEffect(function(){var fetchMyMountains=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var reqOptions,response,body;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:reqOptions={method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({id:localStorage.getItem(\"isLoggedIn\")})};_context.prev=1;_context.next=4;return fetch(\"http://sabrinamueller.eu-4.evennode.com/getallhikes\",reqOptions);case 4:response=_context.sent;if(response.ok){_context.next=7;break;}throw new Error(\"Something went wrong\");case 7:_context.next=9;return response.json();case 9:body=_context.sent;// console.log(body);\nsetMyHikes(body);_context.next=16;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](1);console.log(_context.t0.message);case 16:case\"end\":return _context.stop();}}},_callee,null,[[1,13]]);}));return function fetchMyMountains(){return _ref.apply(this,arguments);};}();fetchMyMountains();},[]);var filteredChangeHandler=function filteredChangeHandler(selectedYear){setFilteredYear(selectedYear);};var filteredHikes=myHikes.filter(function(hike){// console.log(hike.date.split(\"-\")[0]);\nreturn hike.date.split(\"-\")[0]===filteredYear;});// console.log(filteredHikes);\nvar allMyHikesCard=myHikes.map(function(hike){return/*#__PURE__*/_jsx(HikeDetails,{id:hike.id,date:hike.date,name:hike.mountain.name,difference:hike.mountain.difference,altitude:hike.mountain.altitude},hike.id);});return/*#__PURE__*/_jsxs(Card,{className:classes.mountainsinfo,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"My mountains\"}),/*#__PURE__*/_jsx(TourFilter,{selected:filteredYear,onChangeFilter:filteredChangeHandler}),/*#__PURE__*/_jsx(TourChart,{className:classes.tourchart,hikes:filteredHikes}),/*#__PURE__*/_jsx(\"ul\",{children:allMyHikesCard})]});};export default MyMountains;","map":{"version":3,"names":["React","useState","useEffect","Card","HikeDetails","TourFilter","TourChart","classes","MyMountains","myHikes","setMyHikes","filteredYear","setFilteredYear","fetchMyMountains","reqOptions","method","headers","body","JSON","stringify","id","localStorage","getItem","fetch","response","ok","Error","json","console","log","message","filteredChangeHandler","selectedYear","filteredHikes","filter","hike","date","split","allMyHikesCard","map","mountain","name","difference","altitude","mountainsinfo","tourchart"],"sources":["C:/mountain_friends_web/frontend/src/components/Home/MyMountains.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport Card from \"../UI/Card/Card\";\r\nimport HikeDetails from \"./HikeDetails\";\r\nimport TourFilter from \"./ChartBar/TourFilter\";\r\nimport TourChart from \"./ChartBar/TourChart\";\r\nimport classes from \"./MyMountains.module.css\";\r\n\r\nconst MyMountains = () => {\r\n  const [myHikes, setMyHikes] = useState([]);\r\n  const [filteredYear, setFilteredYear] = useState(\"2022\");\r\n  useEffect(() => {\r\n    const fetchMyMountains = async () => {\r\n      const reqOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          id: localStorage.getItem(\"isLoggedIn\"),\r\n        }),\r\n      };\r\n      try {\r\n        const response = await fetch(\r\n          \"http://sabrinamueller.eu-4.evennode.com/getallhikes\",\r\n          reqOptions\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(\"Something went wrong\");\r\n        }\r\n        // let body = JSON.parse(JSON.stringify(response));\r\n        const body = await response.json();\r\n        // console.log(body);\r\n        setMyHikes(body);\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    };\r\n    fetchMyMountains();\r\n  }, []);\r\n\r\n  const filteredChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredHikes = myHikes.filter((hike) => {\r\n    // console.log(hike.date.split(\"-\")[0]);\r\n    return hike.date.split(\"-\")[0] === filteredYear;\r\n  });\r\n\r\n  // console.log(filteredHikes);\r\n\r\n  const allMyHikesCard = myHikes.map((hike) => (\r\n    <HikeDetails\r\n      key={hike.id}\r\n      id={hike.id}\r\n      date={hike.date}\r\n      name={hike.mountain.name}\r\n      difference={hike.mountain.difference}\r\n      altitude={hike.mountain.altitude}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <Card className={classes.mountainsinfo}>\r\n      <h1>My mountains</h1>\r\n      <TourFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filteredChangeHandler}\r\n      />\r\n      <TourChart className={classes.tourchart} hikes={filteredHikes} />\r\n      <ul>{allMyHikesCard}</ul>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MyMountains;\r\n"],"mappings":"kXAAA,MAAOA,MAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,MAAOC,KAAP,KAAiB,iBAAjB,CACA,MAAOC,YAAP,KAAwB,eAAxB,CACA,MAAOC,WAAP,KAAuB,uBAAvB,CACA,MAAOC,UAAP,KAAsB,sBAAtB,CACA,MAAOC,QAAP,KAAoB,0BAApB,C,wFAEA,GAAMC,YAAW,CAAG,QAAdA,YAAc,EAAM,CACxB,cAA8BP,QAAQ,CAAC,EAAD,CAAtC,wCAAOQ,OAAP,eAAgBC,UAAhB,eACA,eAAwCT,QAAQ,CAAC,MAAD,CAAhD,yCAAOU,YAAP,eAAqBC,eAArB,eACAV,SAAS,CAAC,UAAM,CACd,GAAMW,iBAAgB,4FAAG,kKACjBC,UADiB,CACJ,CACjBC,MAAM,CAAE,MADS,CAEjBC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAFQ,CAGjBC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBC,EAAE,CAAEC,YAAY,CAACC,OAAb,CAAqB,YAArB,CADe,CAAf,CAHW,CADI,uCASEC,MAAK,CAC1B,qDAD0B,CAE1BT,UAF0B,CATP,QASfU,QATe,kBAahBA,QAAQ,CAACC,EAbO,8BAcb,IAAIC,MAAJ,CAAU,sBAAV,CAda,8BAiBFF,SAAQ,CAACG,IAAT,EAjBE,QAiBfV,IAjBe,eAkBrB;AACAP,UAAU,CAACO,IAAD,CAAV,CAnBqB,iFAqBrBW,OAAO,CAACC,GAAR,CAAY,YAAMC,OAAlB,EArBqB,qEAAH,kBAAhBjB,iBAAgB,0CAAtB,CAwBAA,gBAAgB,GACjB,CA1BQ,CA0BN,EA1BM,CAAT,CA4BA,GAAMkB,sBAAqB,CAAG,QAAxBA,sBAAwB,CAACC,YAAD,CAAkB,CAC9CpB,eAAe,CAACoB,YAAD,CAAf,CACD,CAFD,CAIA,GAAMC,cAAa,CAAGxB,OAAO,CAACyB,MAAR,CAAe,SAACC,IAAD,CAAU,CAC7C;AACA,MAAOA,KAAI,CAACC,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,IAA4B1B,YAAnC,CACD,CAHqB,CAAtB,CAKA;AAEA,GAAM2B,eAAc,CAAG7B,OAAO,CAAC8B,GAAR,CAAY,SAACJ,IAAD,qBACjC,KAAC,WAAD,EAEE,EAAE,CAAEA,IAAI,CAACf,EAFX,CAGE,IAAI,CAAEe,IAAI,CAACC,IAHb,CAIE,IAAI,CAAED,IAAI,CAACK,QAAL,CAAcC,IAJtB,CAKE,UAAU,CAAEN,IAAI,CAACK,QAAL,CAAcE,UAL5B,CAME,QAAQ,CAAEP,IAAI,CAACK,QAAL,CAAcG,QAN1B,EACOR,IAAI,CAACf,EADZ,CADiC,EAAZ,CAAvB,CAWA,mBACE,MAAC,IAAD,EAAM,SAAS,CAAEb,OAAO,CAACqC,aAAzB,wBACE,oCADF,cAEE,KAAC,UAAD,EACE,QAAQ,CAAEjC,YADZ,CAEE,cAAc,CAAEoB,qBAFlB,EAFF,cAME,KAAC,SAAD,EAAW,SAAS,CAAExB,OAAO,CAACsC,SAA9B,CAAyC,KAAK,CAAEZ,aAAhD,EANF,cAOE,oBAAKK,cAAL,EAPF,GADF,CAWD,CAhED,CAkEA,cAAe9B,YAAf"},"metadata":{},"sourceType":"module"}